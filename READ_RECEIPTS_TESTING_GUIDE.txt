================================================================================
                    READ RECEIPTS TESTING GUIDE
                          SimpleX Chat Android App
================================================================================

Date: August 22, 2025
Status: Build in Progress - NDK downloading
Next Steps: Testing the Read Receipts Implementation

================================================================================
                              BUILD STATUS
================================================================================

CURRENT PROGRESS:
‚úÖ Android SDK installed in WSL
‚úÖ Java 17 configured
‚úÖ Project configuration started
üîÑ NDK (Native Development Kit) downloading (~1GB, may take 10-15 minutes)
‚è≥ Waiting for assembleDebug to complete

EXPECTED OUTPUTS:
- APK Location: /apps/multiplatform/android/build/outputs/apk/debug/android-debug.apk
- Build logs will show compilation success/failure
- Our read receipts code will be included in the final APK

================================================================================
                            TESTING STRATEGY
================================================================================

PHASE 1: COMPILATION VERIFICATION
‚ñ° Wait for ./gradlew assembleDebug to complete successfully
‚ñ° Verify APK is generated without errors
‚ñ° Check build logs for any warnings related to our changes
‚ñ° Confirm all string resources compiled correctly

PHASE 2: INSTALLATION & BASIC UI TESTING
‚ñ° Install APK on Android device/emulator
‚ñ° Navigate to Settings ‚Üí Privacy & security
‚ñ° Verify "Read Receipts" section appears
‚ñ° Test both toggle switches (Contacts & Small Groups)
‚ñ° Verify alert dialogs appear when disabling read receipts
‚ñ° Check all text displays correctly (no missing strings)

PHASE 3: FUNCTIONAL TESTING (requires 2 devices/accounts)

SETUP:
- Device A: Sender (with read receipts enabled)
- Device B: Receiver (with read receipts enabled)
- Both devices running the new APK with read receipts

TEST CASE 1: Basic Read Receipts Flow
1. Device A sends message to Device B
2. Verify message shows single gray tick (sent)
3. Device B receives message - Device A should see double gray ticks (delivered)
4. Device B opens and reads the message
5. ‚úÖ VERIFY: Device A shows colored double ticks (read status)

TEST CASE 2: Read Receipts Disabled
1. Device B disables read receipts in settings
2. Device A sends new message to Device B
3. Device B reads the message
4. ‚úÖ VERIFY: Device A only sees double gray ticks (delivered, not read)

TEST CASE 3: Granular Settings - Contacts vs Groups
1. Create a small group with Device A and Device B
2. Device B enables read receipts for contacts, disables for groups
3. Test direct message: should show read receipts
4. Test group message: should NOT show read receipts

TEST CASE 4: Alert Dialog Confirmation
1. Enable read receipts
2. Try to disable read receipts
3. ‚úÖ VERIFY: Alert dialog appears with proper warning text
4. Test both "Disable" and "Cancel" buttons work correctly

================================================================================
                              VISUAL TESTING
================================================================================

MESSAGE STATUS ICONS TO VERIFY:
- Single gray tick ‚úì = Sent
- Double gray ticks ‚úì‚úì = Delivered  
- Double colored ticks ‚úì‚úì = Read (NEW FEATURE)

SETTINGS UI TO VERIFY:
- Read Receipts section appears under Privacy & security
- Section title: "Read Receipts"
- Section description explaining the feature
- Two toggle switches with proper labels
- Help text explains what read receipts do

ALERT DIALOGS TO VERIFY:
- Clear warning text about disabling read receipts
- "Disable" and "Cancel" buttons work properly
- Dialog dismisses correctly

================================================================================
                          DEBUGGING CHECKLIST
================================================================================

IF BUILD FAILS:
‚ñ° Check build logs for specific error messages
‚ñ° Verify all our modified files compile (ChatModel.kt, SimpleXAPI.kt, etc.)
‚ñ° Check string resources are properly formatted
‚ñ° Ensure all imports are correct

IF UI DOESN'T SHOW READ RECEIPTS SECTION:
‚ñ° Verify PrivacySettings.kt changes were applied correctly
‚ñ° Check if string resources are missing or malformed
‚ñ° Ensure ReadReceiptsSection composable is called

IF ICONS DON'T CHANGE:
‚ñ° Verify CIMetaView.kt changes were applied
‚ñ° Check if CIStatus.SndRead is properly handled
‚ñ° Ensure backend is sending MDSSndRead status

IF SETTINGS DON'T SAVE:
‚ñ° Check ChatSettings serialization
‚ñ° Verify API calls are working
‚ñ° Check User model extensions are correct

================================================================================
                            BACKEND TESTING
================================================================================

BACKEND VERIFICATION (requires backend logs):
‚ñ° Verify XMsgRead events are generated when messages are read
‚ñ° Check MDSSndRead status is sent to frontend
‚ñ° Confirm ChatSettings.sendReadRcpts is synced properly
‚ñ° Validate User preferences are stored in database

LOG FILES TO CHECK:
- Frontend logs for read receipt events
- Backend logs for MDSSndRead status updates
- API communication logs for settings sync

================================================================================
                            PERFORMANCE TESTING
================================================================================

‚ñ° Test read receipts with multiple messages
‚ñ° Verify no performance degradation in message list
‚ñ° Check settings UI responds quickly
‚ñ° Test with large group conversations (if supported)

================================================================================
                            EDGE CASES TO TEST
================================================================================

‚ñ° What happens when one user has read receipts enabled, other disabled?
‚ñ° Test with poor network connection - do read receipts still sync?
‚ñ° Test rapid message sending/reading
‚ñ° Verify read receipts work after app restart
‚ñ° Test with different user profiles/identities

================================================================================
                            SUCCESS CRITERIA
================================================================================

BUILD SUCCESS:
‚úÖ APK generates without compilation errors
‚úÖ All our code changes included in build
‚úÖ No missing string resources or dependencies

FUNCTIONAL SUCCESS:
‚úÖ Different colored double ticks appear when messages are read
‚úÖ Settings UI allows users to control read receipts
‚úÖ Alert dialogs properly warn users about privacy implications
‚úÖ Granular control works (contacts vs groups)
‚úÖ Backend integration works correctly

UX SUCCESS:
‚úÖ Feature is discoverable in Privacy settings
‚úÖ UI is intuitive and follows app design patterns
‚úÖ Text is clear and explains the feature properly
‚úÖ Privacy controls are easy to understand and use

================================================================================
                              ROLLBACK PLAN
================================================================================

IF CRITICAL ISSUES FOUND:
1. Document the specific issue and steps to reproduce
2. Revert changes by restoring original files:
   - ChatModel.kt (remove SndRead and User fields)
   - SimpleXAPI.kt (remove sendReadRcpts field)  
   - CIMetaView.kt (remove SndRead case)
   - PrivacySettings.kt (remove ReadReceiptsSection)
   - strings.xml (remove read receipts strings)
3. Rebuild and test reverted version
4. Fix issues and reapply changes

================================================================================
                            POST-TESTING STEPS
================================================================================

AFTER SUCCESSFUL TESTING:
‚ñ° Document any issues found and fixes applied
‚ñ° Create user documentation for read receipts feature
‚ñ° Update app store descriptions to mention new feature
‚ñ° Plan gradual rollout strategy
‚ñ° Monitor user feedback and usage analytics

================================================================================
                                 NOTES
================================================================================

- First build will take longer due to NDK download
- Testing requires at least 2 SimpleX Chat accounts
- Real device testing recommended over emulator
- Backend must support read receipts (already implemented)
- Feature integrates with existing delivery receipts system

Current build command running:
./gradlew assembleDebug --stacktrace

Expected completion: 10-15 minutes (depending on NDK download speed)

================================================================================
                              END OF GUIDE
================================================================================
