name: Build Android APK with Read Receipts

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Increased for Nix builds
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Remove existing /nix directory if present (workaround for CI)
      run: |
        if [ -d /nix ]; then
          echo "/nix exists, attempting to remove..."
          sudo rm -rf /nix || echo "Could not remove /nix, may not have permissions."
        fi
    - name: Setup Nix
      uses: cachix/install-nix-action@v25
      with:
        install_options: --daemon
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          sandbox = true
          max-jobs = auto
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses
      
    - name: Install additional dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl git zip unzip zipalign
        
    - name: Validate Kotlin syntax (Read Receipts)
      run: |
        echo "üîç Validating Read Receipts implementation..."
        
        # Check if our files exist and have the right content
        echo "‚úÖ Checking ChatModel.kt..."
        grep -q "sendReadRcptsContacts" apps/multiplatform/common/src/commonMain/kotlin/chat/simplex/common/model/ChatModel.kt || exit 1
        
        echo "‚úÖ Checking SimpleXAPI.kt..."
        grep -q "UserReadReceiptSettings" apps/multiplatform/common/src/commonMain/kotlin/chat/simplex/common/model/SimpleXAPI.kt || exit 1
        
        echo "‚úÖ Checking PrivacySettings.kt..."
        grep -q "setSendReadReceiptsContacts" apps/multiplatform/common/src/commonMain/kotlin/chat/simplex/common/views/usersettings/PrivacySettings.kt || exit 1
        
        echo "‚úÖ All read receipts files validated!"
        
    - name: Build Android APK using official script
      run: |
        echo "üöÄ Building Android APK with Nix + Gradle..."
        chmod +x scripts/android/build-android.sh
        # Set environment variables for the build
        export ARCHES="aarch64 armv7a"
        echo "üìã Environment check:"
        echo "Nix version: $(nix --version)"
        echo "Java version: $(java -version 2>&1 | head -1)"
        echo "Gradle available: $(which gradle || echo 'Using wrapper')"
        # Use the official build script with -s flag (use current source)
        echo "Starting build process..."
        # Run with error handling
        if ./scripts/android/build-android.sh -s 2>&1 | tee build.log; then
          echo "‚úÖ Build completed successfully!"
        else
          echo "‚ùå Build failed. Checking logs..."
          tail -100 build.log || true
          echo "üîç Checking for partial APKs..."
          find . -name "*.apk" -type f -exec ls -la {} \; || true
          exit 1
        fi
        echo "üì± Checking for generated APK files..."
        ls -la simplex-chat-*.apk || echo "‚ö†Ô∏è  APKs not found in root directory, checking other locations..."
        find . -name "*.apk" -type f | head -10
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: simplex-chat-release-apks
        path: |
          simplex-chat-*.apk
          apps/multiplatform/android/build/outputs/apk/release/*.apk
        if-no-files-found: warn
        retention-days: 7
        
    - name: List generated APKs
      run: |
        echo "üì± Generated APK files:"
        if ls simplex-chat-*.apk 1> /dev/null 2>&1; then
          ls -la simplex-chat-*.apk
          echo "‚úÖ APKs ready for download!"
        else
          echo "‚ö†Ô∏è  No APKs found in root directory"
          echo "üîç Searching for APKs in build directories..."
          find . -name "*.apk" -type f -exec ls -la {} \;
        fi
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          build.log
          *.log
        if-no-files-found: ignore
        retention-days: 3
        
    - name: Upload build reports on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-reports
        path: |
          apps/multiplatform/android/build/reports/
          apps/multiplatform/common/build/reports/
          nix-build.log
        if-no-files-found: ignore
        retention-days: 1

